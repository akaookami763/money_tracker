// Mocks generated by Mockito 5.4.4 from annotations
// in money_tracker/test/services/category_worker_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:money_tracker/DataCentral/financial_category_model.dart' as _i4;
import 'package:money_tracker/repositories/category_repository_abstract.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FinancialCategoryRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFinancialCategoryRepository extends _i1.Mock
    implements _i2.FinancialCategoryRepository {
  MockFinancialCategoryRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.FinancialCategory>> getAllCategories() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllCategories,
          [],
        ),
        returnValue: _i3.Future<List<_i4.FinancialCategory>>.value(
            <_i4.FinancialCategory>[]),
      ) as _i3.Future<List<_i4.FinancialCategory>>);

  @override
  _i3.Future<_i4.FinancialCategory?> getCategoryByTag(int? tag) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCategoryByTag,
          [tag],
        ),
        returnValue: _i3.Future<_i4.FinancialCategory?>.value(),
      ) as _i3.Future<_i4.FinancialCategory?>);

  @override
  _i3.Future<_i4.FinancialCategory?> getCategoryByName(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCategoryByName,
          [name],
        ),
        returnValue: _i3.Future<_i4.FinancialCategory?>.value(),
      ) as _i3.Future<_i4.FinancialCategory?>);

  @override
  _i3.Future<int> createCategory(String? name) => (super.noSuchMethod(
        Invocation.method(
          #createCategory,
          [name],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<int> updateCategoryByName(
    int? tag,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCategoryByName,
          [
            tag,
            name,
          ],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<int> removeCategory(_i4.FinancialCategory? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeCategory,
          [category],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
}

/// A class which mocks [FinancialCategory].
///
/// See the documentation for Mockito's code generation for more information.
class MockFinancialCategory extends _i1.Mock implements _i4.FinancialCategory {
  MockFinancialCategory() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get tag => (super.noSuchMethod(
        Invocation.getter(#tag),
        returnValue: 0,
      ) as int);

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);
}
